[{"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/index.js":"1","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/App.jsx":"2","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/routes/Home.jsx":"3","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/routes/RestaurantDetailPage.jsx":"4","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/routes/Update.jsx":"5","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/Header.jsx":"6","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/AddRestaurant.jsx":"7","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/RestaurantList.jsx":"8","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/contexts/RestaurantsContext.js":"9","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/api/RestaurantFinder.js":"10","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/UpdateRestaurant.jsx":"11","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/ShowRestaurantDetails.jsx":"12","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/Reviews.jsx":"13","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/StarRating.jsx":"14","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/AddReview.jsx":"15"},{"size":144,"mtime":1607574818499,"results":"16","hashOfConfig":"17"},{"size":1452,"mtime":1607659074043,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607711469688,"results":"19","hashOfConfig":"17"},{"size":266,"mtime":1607712960345,"results":"20","hashOfConfig":"17"},{"size":283,"mtime":1607659084891,"results":"21","hashOfConfig":"17"},{"size":216,"mtime":1607571777431,"results":"22","hashOfConfig":"17"},{"size":3021,"mtime":1607715450428,"results":"23","hashOfConfig":"17"},{"size":4620,"mtime":1607727425761,"results":"24","hashOfConfig":"17"},{"size":693,"mtime":1607725227898,"results":"25","hashOfConfig":"17"},{"size":134,"mtime":1607640770942,"results":"26","hashOfConfig":"17"},{"size":3588,"mtime":1607700694855,"results":"27","hashOfConfig":"17"},{"size":1714,"mtime":1607727402305,"results":"28","hashOfConfig":"17"},{"size":1450,"mtime":1607711740425,"results":"29","hashOfConfig":"17"},{"size":755,"mtime":1607708807850,"results":"30","hashOfConfig":"17"},{"size":2987,"mtime":1607722378985,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"73kpjf",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/index.js",[],["65","66"],"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/App.jsx",[],"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/routes/Home.jsx",[],"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/routes/RestaurantDetailPage.jsx",[],"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/routes/Update.jsx",[],"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/Header.jsx",[],"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/AddRestaurant.jsx",[],"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/RestaurantList.jsx",["67","68"],"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/contexts/RestaurantsContext.js",[],"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/api/RestaurantFinder.js",[],"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/UpdateRestaurant.jsx",["69","70"],"import React, {useState, useEffect} from 'react';\n// import { RestaurantsContext } from '../contexts/RestaurantsContext';\nimport {useHistory, useParams} from 'react-router-dom';\nimport RestaurantFinder from '../api/RestaurantFinder';\n\nconst UpdateRestaurant = (props) => {\n    /** \n     * When trying to figure out how to access the object you want to update, \n     * if params are given in the URL, you can use react-router-dom's useParams function.\n     * */\n    const {id} = useParams();\n    let history = useHistory();\n    const [name, setName] = useState('');\n    const [location, setLocation] = useState('');\n    const [priceRange, setPriceRange] = useState('');\n    \n    /**\n     * Cound useContext but it will only work if the user has been to the page and downloaded it first.\n     * This is because the homepage with the RestaurantList is responsible for fetching the API.\n     * It is better to reuse useEffect in these cases to fetch the API independently.\n     */\n    // const [restaurants, setRestaurants] = useContext(RestaurantsContext);\n    useEffect(() => {\n        const fetchData = async () =>{\n            try {\n                const response = await RestaurantFinder.get(`/${id}`)\n                console.log(response.data.data)\n                setName(response.data.data.restaurant.name)\n                setLocation(response.data.data.restaurant.location)\n                setPriceRange(response.data.data.restaurant.price_range)\n            } catch (err) {\n                console.error(err)\n            }\n        };\n        fetchData();\n    }, [])\n\n    const handleSubmit = async (e) =>{\n        e.preventDefault();\n        const updatedRestaurant = await RestaurantFinder.put(`/${id}`, {\n            name,\n            location,\n            price_range: priceRange\n        });\n        history.push('/');\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                        <input\n                            value={name}\n                            id=\"name\"\n                            onChange={e => setName(e.target.value)} \n                            type=\"text\" \n                            className=\"form-control\"\n                            required\n                        />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"location\">Location</label>\n                    <input\n                        value={location}\n                        id=\"location\"\n                        onChange={e => setLocation(e.target.value)} \n                        type=\"text\" \n                        className=\"form-control\"\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"price_range\">Price Range</label>\n                    <input\n                        value={priceRange}\n                        id=\"price_range\"\n                        onChange={e => setPriceRange(e.target.value)} \n                        type=\"number\" \n                        className=\"form-control\"\n                        required // Must require here as well to prevent updates from allowing null values.\n                    />\n                </div>\n                    <div className=\"col-1\">\n                        <button type=\"submit\" className=\"btn btn-primary\">Update</button>\n                    </div>\n            </form>\n        </div>\n    )\n}\n\nexport default UpdateRestaurant;","/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/ShowRestaurantDetails.jsx",["71"],"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/Reviews.jsx",[],"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/StarRating.jsx",[],"/home/book/Documents/WebDev_Practice/PERN-Stack/sanjeev_yelp_clone/client/src/components/AddReview.jsx",["72"],"import React, {useState} from 'react';\nimport {useParams } from 'react-router-dom'; \nimport RestaurantFinder from '../api/RestaurantFinder';\n\nconst AddReview = () => {\n    const {id} = useParams();\n    // const history = useHistory();\n    // const location = useLocation();\n    const [name, setName] = useState('');\n    const [rating, setRating] = useState('Rating');\n    const [reviewText, setReviewText] = useState('');\n    \n    const handleReview = async (e) =>{\n        e.preventDefault();\n        try {\n            const response = await RestaurantFinder.post(`/${id}/addReview`, {\n                name,\n                review: reviewText,\n                rating\n            });\n        } catch (err) {\n            console.error(err)\n        }\n        // One way to do it is with react hooks. Navigate to home become coming back to location.pathname.\n        // history.push(\"/\")\n        // history.push(location.pathname)\n\n        // The easy way...\n        window.location = `/restaurants/${id}/`\n    };\n\n    return (\n        <div className=\"mb-2\">\n            <form onSubmit={handleReview}>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-8\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                            id=\"name\" \n                            placeholder=\"name\" \n                            type=\"text\" \n                            className=\"form-control\"\n                        />\n                    </div>\n                    <div className=\"form-group col-4\">\n                        <label htmlFor=\"rating\">Rating</label>\n                        <select \n                            value={rating}\n                            onChange={e => setRating(e.target.value)}\n                            id=\"rating\" \n                            className=\"custom-select\"\n                        >\n                            <option disabled>Rating</option>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"review\">Review</label>\n                    <textarea\n                        value={reviewText}\n                        onChange={e => setReviewText(e.target.value)} \n                        id=\"review\" \n                        className=\"form-control\"\n                    ></textarea>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default AddReview;",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":30,"column":8,"nodeType":"79","endLine":30,"endColumn":10,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":35,"column":19,"nodeType":"83","messageId":"84","endLine":35,"endColumn":27},{"ruleId":"77","severity":1,"message":"85","line":36,"column":8,"nodeType":"79","endLine":36,"endColumn":10,"suggestions":"86"},{"ruleId":"81","severity":1,"message":"87","line":40,"column":15,"nodeType":"83","messageId":"84","endLine":40,"endColumn":32},{"ruleId":"77","severity":1,"message":"88","line":24,"column":8,"nodeType":"79","endLine":24,"endColumn":10,"suggestions":"89"},{"ruleId":"81","severity":1,"message":"82","line":16,"column":19,"nodeType":"83","messageId":"84","endLine":16,"endColumn":27},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setRestaurants'. Either include it or remove the dependency array.","ArrayExpression",["92"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["93"],"'updatedRestaurant' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'setSelectedRestaurant'. Either include them or remove the dependency array.",["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [setRestaurants]",{"range":"101","text":"102"},"Update the dependencies array to be: [id]",{"range":"103","text":"104"},"Update the dependencies array to be: [id, setSelectedRestaurant]",{"range":"105","text":"106"},[1239,1241],"[setRestaurants]",[1568,1570],"[id]",[912,914],"[id, setSelectedRestaurant]"]